{"version":3,"file":"component---src-page-templates-product-template-index-tsx-78d0e3fd753fa803dff1.js","mappings":"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","sources":["webpack://tastyspore/./src/page_templates/product_template/components/FullDescription.tsx","webpack://tastyspore/./src/page_templates/product_template/components/Sizes.tsx","webpack://tastyspore/./src/page_templates/product_template/Template.tsx","webpack://tastyspore/./src/components/MyCart/Notification.tsx","webpack://tastyspore/./src/page_templates/product_template/index.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\"\nimport { Flex, H2, H3, Hr } from \"src/styles\"\nimport styled from \"styled-components\"\nimport { ProductFrontmatterFragment } from \"types/gatsby-graphql\"\n\nconst FullDescriptionStyles = styled.div`\n  padding-bottom: 100px;\n\n  position: relative;\n  display: -webkit-box;\n  padding-top: 10px;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  h2 {\n    color: var(--accentColor);\n  }\n  p {\n    line-height: 27px;\n  }\n  div {\n    margin-bottom: 10px;\n  }\n  overflow-y: auto;\n  h3 {\n    margin-left: 10px;\n  }\n  li {\n    list-style: none;\n  }\n\n  .aliases,\n  .benefits,\n  .profile {\n    text-transform: capitalize;\n  }\n  .benefits,\n  .nutrition,\n  .aliases,\n  .description {\n    margin-top: 40px;\n    p {\n      padding: 0 10px;\n    }\n  }\n  .aliases {\n    li {\n      width: fit-content;\n    }\n  }\n  .benefits {\n    li {\n      &::before {\n        content: \"✓ \";\n      }\n    }\n  }\n  .nutrition {\n    padding: 30px 20px;\n    border: 1px solid var(--accentColor);\n    border-radius: 25px;\n    h3,\n    i {\n      display: inline-block;\n      margin-bottom: 10px;\n    }\n  }\n`\n\nconst Snippets = styled(Flex)`\n  padding: 0 10px;\n  li {\n    width: fit-content;\n    padding: 10px;\n    margin: 10px 10px 0 0;\n    border-radius: 5px;\n    background-color: #f7f7f7;\n    box-shadow: 1px 1px 3px #e3e3e3;\n  }\n`\n\nconst Table = styled.ul`\n  padding: 0 10px;\n  li {\n    padding: 10px;\n  }\n  li:nth-of-type(2n + 1) {\n    background-color: #f5f5f5;\n  }\n  span {\n    display: inline-block;\n  }\n`\n\nexport function FullDescription({\n  data,\n}: {\n  data: ProductFrontmatterFragment\n}) {\n  const fm = data?.frontmatter\n\n  if (!fm) return null\n  return (\n    <FullDescriptionStyles>\n      <H2>Profile </H2>\n      <Flex direction=\"row\" wrap>\n        <div className=\"flavor\">\n          <H3>Flavor: </H3>\n          <Snippets>\n            {fm.profile.flavor.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </Snippets>\n        </div>\n        <div className=\"texture\">\n          <H3>Texture: </H3>\n          <Snippets wrap>\n            {fm.profile.texture.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </Snippets>\n        </div>\n        <div className=\"aroma\">\n          <H3>Aroma: </H3>\n          <Snippets wrap>\n            {fm.profile.aroma.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </Snippets>\n        </div>\n        <div className=\"similar\" style={{ minWidth: \"200px\" }}>\n          <H3>Similar flavor to: </H3>\n          <Snippets wrap>\n            {fm.profile.similar.map((e, key) => (\n              <li key={key}>{e}</li>\n            ))}\n          </Snippets>\n        </div>\n      </Flex>\n      <div className=\"aliases\">\n        <H2>Common Names</H2>\n        <Snippets wrap>\n          {fm.aka.map((e, key) => (\n            <li key={key}>{e}</li>\n          ))}\n        </Snippets>\n      </div>\n      <div className=\"description\">\n        <H2>Description</H2>\n        <p>\n          {fm.description} They prefer {fm.grow.temp.readable} temperatures of\n          around {fm.grow.temp.degrees.min}°F ~{fm.grow.temp.degrees.max}°F at a\n          humidity of {fm.grow.humidity}% and take approximatly {fm.grow.time}{\" \"}\n          to mature to the size of around {fm.grow.size}in.\n        </p>\n      </div>\n      <div className=\"benefits\">\n        <H2>Benefits</H2>\n        <Snippets direction=\"column\">\n          {fm.benefits.map((e, key) => (\n            <li key={key}>{e}</li>\n          ))}\n        </Snippets>\n      </div>\n      <div className=\"nutrition\">\n        <H2>Nutrition Values</H2>\n        <i>In 1 cup:</i>\n        <Table>\n          <li>calories: {fm.nutrition.calories}</li>\n          <li>carbs: {fm.nutrition.carbs}</li>\n          <li>protein: {fm.nutrition.protein}</li>\n          <li>fat: {fm.nutrition.fat}</li>\n          <li>fiber: {fm.nutrition.fiber}</li>\n        </Table>\n        <Hr />\n        <H3>Vitamins</H3>\n        <Table className=\"vitamins\">\n          {fm.nutrition.vitamins.map((e, key) => (\n            <li key={key}>\n              {e.name}: {e.value}\n            </li>\n          ))}\n        </Table>\n      </div>\n    </FullDescriptionStyles>\n  )\n}\n","import React from \"react\"\n\nexport function Sizes({\n  inventory,\n  size,\n  setSize,\n}: {\n  inventory: any\n  size: string\n  setSize: React.Dispatch<React.SetStateAction<string>>\n}) {\n  if (!inventory || !size || !setSize) return null\n  return (\n    <div className=\"sizes\">\n      {inventory &&\n        inventory.map((item: any, idx: number) => (\n          <div\n            key={idx}\n            className={\n              item?.size +\n              (item?.size == size ? \" selected\" : \"\") +\n              (item.quantity == 0 ? \" out-of-stock\" : \"\")\n            }\n            onClick={() => {\n              setSize(item?.size as string)\n            }}\n          >\n            <p className=\"size-label\">{item?.size}</p>\n            {item?.weight}\n            <span className=\"unit\">lbs</span>\n            {item.quantity == 0 ? (\n              <p className=\"out-label\">out of stock</p>\n            ) : (\n              <p className=\"price price-label\">\n                <span>$</span>\n                {item.price.msrp}\n              </p>\n            )}\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { ProductFrontmatterFragment } from \"types/gatsby-graphql\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport { FullDescription } from \"./components/FullDescription\"\nimport { Sizes } from \"./components/Sizes\"\nimport { QuantityPrice } from \"./components/QuantityPrice\"\n\nimport Helmet from \"src/components/Main/Helmet/Helmet\"\nimport { PIInterface } from \"types\"\nimport { useLocalStorage } from \"usehooks-ts\"\nimport styled from \"styled-components\"\nimport { Content, H1, H2, Hr, PickQuantity } from \"src/styles\"\n\nconst ProductPageStyles = styled.div`\n  padding-top: 30px !important;\n  padding: 20px;\n  position: relative;\n  background-color: #fff;\n  border-radius: 30px 30px 0 0;\n\n  overflow: auto;\n  .content {\n    padding: 20px !important;\n  }\n  h1 {\n    font-size: 35px;\n    margin-bottom: 40px;\n  }\n  h2 {\n    line-height: 20px;\n    font-size: 20px;\n    letter-spacing: 1px;\n    font-weight: bold;\n  }\n  h3 {\n    font-size: 20px;\n    font-weight: initial;\n  }\n  .image {\n    width: fit-content;\n    margin: 20px auto;\n    margin-bottom: 40px;\n  }\n  button.buy {\n  }\n  button.buy.out-of-stock {\n    opacity: 0.5;\n    pointer-events: none;\n  }\n  .select-size-label {\n    opacity: 0.5;\n  }\n  .sizes {\n    display: flex;\n    align-items: flex-end;\n    .unit {\n      display: inline-block;\n      padding-left: 2px;\n      font-size: 12px;\n    }\n    .small,\n    .medium,\n    .large {\n      cursor: pointer;\n      width: 100%;\n      background: #f7f7f7;\n      padding: 10px;\n      margin: 10px;\n      border-radius: 10px;\n      border: 2px solid #ededed;\n      min-height: 100%;\n    }\n    div.selected {\n      border: 2px solid var(--accentColor);\n      &:after {\n        position: relative;\n        display: inline-block;\n        content: \"(selected)\";\n        font-size: 14px;\n        margin-top: 10px;\n        text-align: center;\n        width: 100%;\n        color: #9d9c9c;\n      }\n    }\n    .size-label {\n      text-transform: capitalize;\n    }\n    .price-label {\n      text-align: center;\n      padding: 0;\n      line-height: unset;\n      padding-top: 10px;\n      margin-right: 10px;\n      font-size: 25px;\n      font-weight: inherit;\n      span {\n        color: $dark-text;\n        padding-right: 2px;\n        font-size: 12px;\n      }\n    }\n    .out-of-stock {\n      color: #bdbdbd;\n      pointer-events: none;\n      .out-label {\n        font-size: 15px;\n      }\n    }\n  }\n  .price {\n    font-size: 22px;\n    line-height: 40px;\n    font-weight: bold;\n    padding: 0 20px 0 10px;\n    span {\n      font-size: 15px;\n      transform: translateY(-8px);\n      padding-right: 3px;\n    }\n  }\n`\n\nconst BuyButton = styled.button`\n  padding: 10px 20px;\n  background-color: $dark-text;\n  font-size: 20px;\n  border-radius: 100px;\n  margin-left: auto;\n  transition: all 0.07s ease;\n  user-select: none;\n  span {\n    color: white;\n  }\n  &:active {\n    transform: scale(0.9);\n    opacity: 0.7;\n  }\n`\n\nconst H1WithSpan = styled(H1)`\n  line-height: 35px;\n  span {\n    font-size: 24px;\n    font-style: italic;\n    color: #858585;\n    font-weight: lighter;\n  }\n`\n\nconst BottomContent = styled(Content)`\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  background: white;\n  padding: 20px;\n  border-radius: 30px 30px 0 0;\n  box-shadow: 0 0 20px #0000001c;\n`\n\nexport function Template({ d }: { d: any }) {\n  const data: ProductFrontmatterFragment = d?.mdx\n  const fm = data.frontmatter\n\n  // selected item specs\n  const defaultSize = \"medium\"\n  const [size, setSize] = useState(defaultSize)\n  const [quantity, setQuantity] = useState(1)\n\n  // items in cart\n  const [_, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\n\n  const selectedItem = fm?.inventory.filter(\n    (item: any) => item?.size == size\n  )[0]\n  const maxQuantity = selectedItem.quantity\n\n  const accentColor = fm?.accent_color as string\n  const mdxStyle = { \"--accentColor\": accentColor } as React.CSSProperties\n\n  if (!fm?.logo || !fm?.logo.source) return null\n  const image = getImage(fm?.logo?.source.childImageSharp?.gatsbyImageData)\n\n  const price = selectedItem?.price?.sale\n    ? selectedItem.price.sale * quantity\n    : selectedItem?.price?.msrp * quantity\n\n  const setCartItems = (id: string, size: string, quantity: number) => {\n    setItems((prev) => {\n      console.log(prev)\n\n      if (prev == undefined) {\n        return [{ id, size, quantity }]\n      }\n\n      let prevQuantity = 0\n      return prev\n        .filter((e) => {\n          if (e.id + e.size !== id + size) {\n            return true\n          } else {\n            prevQuantity = e.quantity\n          }\n        })\n        .concat({\n          id,\n          size,\n          quantity:\n            quantity + prevQuantity <= maxQuantity\n              ? quantity + prevQuantity\n              : maxQuantity,\n        })\n    })\n    setQuantity(1)\n  }\n\n  useEffect(() => {\n    if (quantity > selectedItem.quantity) {\n      setQuantity(selectedItem.quantity)\n    }\n  }, [size])\n\n  return (\n    <ProductPageStyles style={mdxStyle}>\n      <Helmet\n        title={fm.readable_class + \" \" + fm.readable_category + \" | TastySpore\"}\n        description={fm.description}\n        keywords={[\n          \"mushroom\",\n          \"mushroom growing kit\",\n          \"how to grow mushrooms\",\n          fm.scientific_name,\n          ...fm.aka,\n          ...fm.benefits,\n        ]}\n      />\n      <Content>\n        <div className=\"image\">\n          {image && <GatsbyImage image={image} alt={fm?.title as string} />}\n        </div>\n        <H2>{fm?.readable_category}</H2>\n        <H1WithSpan style={{ color: accentColor }}>\n          {fm?.readable_class} <span>({fm?.scientific_name})</span>\n        </H1WithSpan>\n        <p className=\"select-size-label\">(select a size)</p>\n        <Sizes inventory={fm.inventory} size={size} setSize={setSize} />\n        <Hr />\n        <FullDescription data={data} />\n        <br />\n        <br />\n        <br />\n      </Content>\n      <BottomContent>\n        <p className=\"price\" style={{ color: accentColor }}>\n          <span>$</span>\n          {price}\n        </p>\n        <PickQuantity\n          current={quantity}\n          add={() => {\n            setQuantity((prev) => (prev < maxQuantity ? prev + 1 : maxQuantity))\n          }}\n          minus={() => {\n            setQuantity((prev) => (prev > 1 ? prev - 1 : 1))\n          }}\n        />\n        <BuyButton\n          className={\n            \"buy\" + (selectedItem.quantity == 0 ? \" out-of-stock\" : \"\")\n          }\n          style={{ backgroundColor: accentColor }}\n          onClick={() => {\n            setCartItems(fm.id, size, quantity)\n          }}\n        >\n          {selectedItem.quantity == 0 ? (\n            <span>No stock</span>\n          ) : (\n            <span>Add to cart +</span>\n          )}\n        </BuyButton>\n      </BottomContent>\n    </ProductPageStyles>\n  )\n}\n","import React, { useState, useRef } from \"react\"\nimport { PIInterface } from \"types\"\nimport { animated, useSpring } from \"react-spring\"\nimport { useLocalStorage, useEventListener } from \"usehooks-ts\"\nimport { ProductFrontmatterFragment } from \"types/gatsby-graphql\"\nimport styled from \"styled-components\"\n\nconst NotificationStyles = styled(animated.div)`\n  position: fixed;\n  z-index: 20;\n  top: 0;\n  padding: 20px;\n  background: #fffdfc;\n  border-top: 0;\n  right: 0;\n  left: 0;\n  border-radius: 0 0 20px 20px;\n  text-align: center;\n  font-size: 20px;\n  box-shadow: 1px 1px 3px #e3e3e3;\n  .max-10 {\n    color: $pink;\n  }\n`\n\nexport default function Notification({ d }: { d: any }) {\n  const data: ProductFrontmatterFragment = d?.mdx\n\n  const [items, _] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\n  const [showNotification, setShowNotification] = useState(false)\n  const notificationTimeout = useRef(null)\n\n  const notificationSpring = useSpring({\n    transform: !showNotification ? \"translateY(-101%)\" : \"translateY(0%)\",\n    opacity: showNotification ? 1 : 0,\n  })\n\n  useEventListener(\"local-storage\", () => {\n    if (!showNotification) setShowNotification(true)\n\n    clearTimeout(notificationTimeout.current)\n    notificationTimeout.current = setTimeout(() => {\n      setShowNotification(false)\n    }, 1500)\n  })\n\n  let itemCount = 0\n  items && items.forEach((e) => (itemCount += e.quantity))\n\n  const lastItem = items && items.length ? items[items.length - 1] : null\n  const maxQuantity =\n    lastItem && data\n      ? data.frontmatter.inventory.filter((e) => e.size == lastItem.size)[0]\n          .quantity\n      : 0\n  const name =\n    data.frontmatter.readable_class + \" \" + data.frontmatter.readable_category\n\n  return (\n    items &&\n    items.length > 0 && (\n      <NotificationStyles style={notificationSpring}>\n        <p>\n          Added {name} to your cart. 🎉\n          <br />\n          {lastItem?.quantity == maxQuantity && (\n            <span className=\"max-10\">[Max: {lastItem?.quantity}]</span>\n          )}\n        </p>\n      </NotificationStyles>\n    )\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Page } from \"src/components/Main/Page/Page\"\nimport { Template } from \"./Template\"\nimport Notification from \"src/components/MyCart/Notification\"\n\nexport default function Main({ data }: { data: any }) {\n  return (\n    <Page navigation={{ cart: true, home: true }}>\n      <Notification d={data} />\n      <Template d={data} />\n    </Page>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    mdx(frontmatter: { id: { eq: $id } }) {\n      ...ProductFrontmatter\n    }\n  }\n`\n"],"names":["FullDescriptionStyles","styled","Snippets","Flex","Table","FullDescription","data","fm","frontmatter","H2","direction","wrap","className","H3","profile","flavor","map","e","key","texture","aroma","style","minWidth","similar","aka","description","grow","temp","readable","degrees","min","max","humidity","time","size","benefits","nutrition","calories","carbs","protein","fat","fiber","Hr","vitamins","name","value","Sizes","inventory","setSize","item","idx","quantity","onClick","weight","price","msrp","ProductPageStyles","BuyButton","H1WithSpan","H1","BottomContent","Content","Template","d","mdx","useState","setQuantity","useLocalStorage","setItems","selectedItem","filter","maxQuantity","accentColor","accent_color","mdxStyle","logo","source","image","getImage","childImageSharp","gatsbyImageData","sale","useEffect","Helmet","title","readable_class","readable_category","keywords","scientific_name","G","alt","color","current","add","prev","minus","backgroundColor","id","console","log","undefined","prevQuantity","concat","setCartItems","NotificationStyles","animated","Notification","items","showNotification","setShowNotification","notificationTimeout","useRef","notificationSpring","useSpring","transform","opacity","useEventListener","clearTimeout","setTimeout","itemCount","forEach","lastItem","length","Main","Page","navigation","cart","home"],"sourceRoot":""}