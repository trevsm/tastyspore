{"version":3,"file":"component---src-pages-checkout-tsx-9a4769f66f0d829abdbd.js","mappings":"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","sources":["webpack://tastyspore/./src/components/icons/Trash.tsx","webpack://tastyspore/./src/components/MyCart/CartItem.tsx","webpack://tastyspore/./src/pages/checkout.tsx"],"sourcesContent":["import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={width}\n      viewBox=\"300 300 600 600\"\n    >\n      <path\n        fill={color}\n        d=\"M822 600c0 122.61-99.395 222-222 222s-222-99.395-222-222 99.395-222 222-222 222 99.395 222 222zm-408 0c0 102.73 83.273 186 186 186s186-83.273 186-186-83.273-186-186-186-186 83.273-186 186zm211.46 0l59.27 59.273c7.031 7.027 7.031 18.426 0 25.453-7.027 7.031-18.426 7.031-25.453 0l-59.273-59.27-59.273 59.27c-7.027 7.031-18.426 7.031-25.453 0-7.031-7.027-7.031-18.426 0-25.453L574.548 600l-59.27-59.273c-7.031-7.027-7.031-18.426 0-25.453 7.027-7.031 18.426-7.031 25.453 0l59.273 59.27 59.273-59.27c7.027-7.031 18.426-7.031 25.453 0 7.031 7.027 7.031 18.426 0 25.453z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React, { useState } from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport Trash from \"src/components/icons/Trash\"\nimport \"./CartItem.scss\"\nimport { CIInterface } from \"types\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\nimport { animated, useSpring } from \"react-spring\"\n\nexport default function CartItem({\n  item,\n  styles,\n  removeItem,\n  setItemQuantity,\n}: {\n  item: CIInterface\n  styles: any\n  removeItem: (id: string, size: string) => void\n  setItemQuantity: (item: CIInterface, newQuantity: number) => void\n}) {\n  const [confirmDelete, setConfirmDelete] = useState(false)\n\n  const fade = useSpring({\n    opacity: confirmDelete ? 1 : 0,\n    pointerEvents: confirmDelete ? \"all\" : \"none\",\n  })\n\n  return (\n    <animated.div\n      style={styles}\n      className={\"item\"}\n      tabIndex={0}\n      onBlur={(event) => {\n        if (!event.currentTarget.contains(event.relatedTarget)) {\n          setConfirmDelete(false)\n        }\n      }}\n    >\n      <animated.div className=\"confirm-delete\" style={fade}>\n        <p>Remove this item?</p>\n        <button\n          onClick={() => {\n            setConfirmDelete(false)\n          }}\n          className=\"no\"\n        >\n          Cancel\n        </button>\n        <button\n          className=\"yes\"\n          onClick={() => {\n            setConfirmDelete(false)\n            removeItem(item.id, item.size)\n          }}\n        >\n          Remove\n        </button>\n      </animated.div>\n      <div className={\"flex\"}>\n        <AniLink paintDrip hex={item.accent_color} to={\"/\" + item.id}>\n          <GatsbyImage image={getImage(item.image)} alt={item.title} />\n        </AniLink>\n        <div className=\"info\">\n          <h2>{item.title}</h2>\n          <p className=\"price\">${item.price.msrp}</p>\n          <div className=\"quantity\">\n            <button\n              className=\"add\"\n              onClick={() =>\n                setItemQuantity(\n                  item,\n                  item.quantity < 10 ? item.quantity + 1 : 10\n                )\n              }\n            >\n              +\n            </button>\n            <span className=\"num\">{item.quantity}</span>\n            <button\n              className=\"minus\"\n              onClick={() =>\n                setItemQuantity(item, item.quantity > 1 ? item.quantity - 1 : 1)\n              }\n            >\n              -\n            </button>\n          </div>\n          <p className=\"size\">\n            {item.size[0]} : {item.weight}lbs\n          </p>\n          <button\n            className=\"delete\"\n            onClick={() => {\n              setConfirmDelete(true)\n            }}\n          >\n            <Trash color=\"#f36766\" width={30} />\n          </button>\n        </div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { CIInterface, MDXQuery, PIInterface } from \"types\"\nimport Helmet from \"src/components/Main/Helmet/Helmet\"\nimport CartItem from \"src/components/MyCart/CartItem\"\nimport { Page } from \"src/components/Main/Page/Page\"\nimport { useLocalStorage } from \"usehooks-ts\"\nimport { useTransition } from \"react-spring\"\nimport Cart from \"src/components/icons/Cart\"\nimport ClientRender from \"src/tools/ClientRender\"\n\nfunction addZeroes(num: string) {\n  const dec = num.split(\".\")[1]\n  const len = dec && dec.length > 2 ? dec.length : 2\n  return Number(num).toFixed(len)\n}\n\nfunction getTotalPrices(itemsWithData: any[]) {\n  const sub_total = !itemsWithData\n    ? 0\n    : itemsWithData\n        .map((e) => e.quantity * e.price.msrp)\n        .reduce((a, b) => a + b, 0)\n  const sales_tax = +(sub_total * 0.16).toFixed(2)\n  const total = (sales_tax + sub_total).toFixed(2)\n  return {\n    sub_total,\n    sales_tax,\n    total,\n  }\n}\n\nconst createItemData = (\n  items: PIInterface[],\n  data: { allMdx: { edges: any[] } }\n): CIInterface[] => {\n  const final: CIInterface[] = []\n  if (items && items.length) {\n    items.forEach((item) => {\n      const id = item.id\n      const size = item.size\n      const quantity = item.quantity\n      data.allMdx.edges.forEach((catalogItem) => {\n        const cfm = catalogItem.node.frontmatter\n        if (cfm.id == id) {\n          cfm.inventory.forEach((inventoryItem: CIInterface) => {\n            if (inventoryItem.size == size)\n              final.push({\n                id,\n                title: cfm.title,\n                size: inventoryItem.size,\n                quantity,\n                price: { msrp: inventoryItem.price.msrp },\n                image: cfm.logo.source.childImageSharp,\n                weight: inventoryItem.weight,\n                accent_color: cfm.accent_color,\n              })\n          })\n        }\n      })\n    })\n  }\n  return final\n}\n\nexport default function MyCart({ data }: { data: MDXQuery }) {\n  const [items, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\n  const [itemsWithData, setItemsWithData] = useState<CIInterface[]>(\n    createItemData(items, data)\n  )\n  const { sub_total, sales_tax, total } = getTotalPrices(itemsWithData)\n\n  useEffect(() => {\n    setItemsWithData(createItemData(items, data))\n  }, [items])\n\n  const removeItem = (id: string, size: string) => {\n    setItems((prev) => {\n      return prev.filter((e) => e.id + e.size !== id + size)\n    })\n  }\n\n  const transitions = useTransition(\n    itemsWithData.map((item, i) => {\n      return { ...item }\n    }),\n    (d) => d.id + d.size,\n    {\n      from: { opacity: 0 },\n      enter: {\n        opacity: 1,\n        height: \"110px\",\n        paddingTop: \"15px\",\n        paddingBottom: \"15px\",\n        marginBottom: \"20px\",\n      },\n      leave: {\n        opacity: 0,\n        height: \"0px\",\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        marginBottom: \"0px\",\n        overflow: \"hidden\",\n      },\n    }\n  )\n\n  const setItemQuantity = (item: CIInterface, newQuantity: number) => {\n    const index = items.findIndex((e) => e.id + e.size == item.id + item.size)\n    const newItem = { ...items[index], quantity: newQuantity }\n\n    items[index] = newItem\n    setItems(items)\n  }\n\n  return (\n    <Page navigation={{ home: true }}>\n      <Helmet\n        title=\"Delicious Mushrooms & Tasty Recipes! | TastySpore\"\n        description=\"Our Mushrooms grow kits are the best kits available for growing mushrooms indoors. With a 100% guarantee, we know you will love our mushrooms as much as we do.\"\n        keywords={[\n          \"mushroom\",\n          \"mushroom growing kit\",\n          \"mushroom drawing\",\n          \"mushroom menu\",\n          \"lion's mane mushroom\",\n          \"shiitake mushroom\",\n          \"enoki mushroom\",\n          \"reishi mushroom\",\n        ]}\n      />\n      <ClientRender>\n        <div className=\"cart-tab content\">\n          <h3 className=\"cart\">My Cart</h3>\n          <section>\n            {transitions.map(({ item, props, key }, index) => (\n              <CartItem\n                item={item}\n                styles={props}\n                removeItem={removeItem}\n                setItemQuantity={setItemQuantity}\n                key={key}\n              />\n            ))}\n\n            {(!items || !items.length) && (\n              <div className=\"no-items\">\n                <Cart color=\"#dddddd\" width={150} />\n                <p>No Items In Cart</p>\n              </div>\n            )}\n          </section>\n          {items && items.length && (\n            <div className=\"nav content\">\n              <p className=\"sub\">\n                Sub total: <span>${sub_total}</span>\n              </p>\n              <p className=\"sub\">\n                Tax: <span>${addZeroes(sales_tax + \"\")}</span>\n              </p>\n              <p className=\"price\">\n                Total: <span>${total}</span>\n              </p>\n              <button\n                onClick={() => {\n                  alert(\n                    \"Thank you for your interest! Orders are currently disabled until we officially launch. Check back here soon for updates!\"\n                  )\n                }}\n              >\n                Continue to shipping\n              </button>\n            </div>\n          )}\n        </div>\n      </ClientRender>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: frontmatter___title }) {\n      edges {\n        node {\n          ...ProductFrontmatter\n        }\n      }\n    }\n  }\n`\n"],"names":["color","width","xmlns","height","viewBox","fill","d","CartItem","item","styles","removeItem","setItemQuantity","useState","confirmDelete","setConfirmDelete","fade","useSpring","opacity","pointerEvents","style","className","tabIndex","onBlur","event","currentTarget","contains","relatedTarget","onClick","id","size","AniLink","paintDrip","hex","accent_color","to","G","image","getImage","alt","title","price","msrp","quantity","weight","Trash","createItemData","items","data","final","length","forEach","allMdx","edges","catalogItem","cfm","node","frontmatter","inventory","inventoryItem","push","logo","source","childImageSharp","MyCart","useLocalStorage","setItems","itemsWithData","setItemsWithData","sub_total","map","e","reduce","a","b","sales_tax","toFixed","total","getTotalPrices","useEffect","num","dec","len","prev","filter","transitions","useTransition","i","from","enter","paddingTop","paddingBottom","marginBottom","leave","overflow","newQuantity","index","findIndex","newItem","Page","navigation","home","Helmet","description","keywords","ClientRender","props","key","Cart","split","Number","alert"],"sourceRoot":""}