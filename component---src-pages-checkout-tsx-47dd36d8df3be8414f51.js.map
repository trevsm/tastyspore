{"version":3,"file":"component---src-pages-checkout-tsx-47dd36d8df3be8414f51.js","mappings":"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","sources":["webpack://tastyspore/./src/components/icons/Trash.tsx","webpack://tastyspore/./src/components/MyCart/CartItem.tsx","webpack://tastyspore/./src/pages/checkout.tsx"],"sourcesContent":["import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={width}\n      viewBox=\"300 300 600 600\"\n    >\n      <path\n        fill={color}\n        d=\"M822 600c0 122.61-99.395 222-222 222s-222-99.395-222-222 99.395-222 222-222 222 99.395 222 222zm-408 0c0 102.73 83.273 186 186 186s186-83.273 186-186-83.273-186-186-186-186 83.273-186 186zm211.46 0l59.27 59.273c7.031 7.027 7.031 18.426 0 25.453-7.027 7.031-18.426 7.031-25.453 0l-59.273-59.27-59.273 59.27c-7.027 7.031-18.426 7.031-25.453 0-7.031-7.027-7.031-18.426 0-25.453L574.548 600l-59.27-59.273c-7.031-7.027-7.031-18.426 0-25.453 7.027-7.031 18.426-7.031 25.453 0l59.273 59.27 59.273-59.27c7.027-7.031 18.426-7.031 25.453 0 7.031 7.027 7.031 18.426 0 25.453z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React, { useState } from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport Trash from \"src/components/icons/Trash\"\nimport \"./CartItem.scss\"\nimport { CIInterface } from \"types\"\nimport { animated, useSpring } from \"react-spring\"\nimport styled from \"styled-components\"\nimport { Link } from \"src/styles\"\n\nconst ItemStyles = styled(animated.div)`\n  position: relative;\n  background: white;\n  padding: 15px;\n  border-radius: 20px;\n  box-shadow: rgb(0 0 0 / 6%) 2px 1px 7px;\n  margin-bottom: 20px;\n  button {\n    cursor: pointer;\n  }\n  a {\n    margin-right: 20px;\n    width: 100px;\n  }\n  img {\n    width: 70px;\n  }\n  .flex {\n    display: flex;\n  }\n  .size {\n    text-transform: capitalize;\n    color: #b1b1b1;\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 15px;\n  }\n  .price {\n    margin-bottom: 10px;\n  }\n  button.delete {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    margin: 12px;\n    padding: 0;\n  }\n  .confirm-delete {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: 10;\n\n    border-radius: 20px;\n    background-color: white;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n\n    p,\n    button {\n      color: white;\n      font-size: 18px;\n    }\n    p {\n      width: 100%;\n      color: #313439;\n      text-align: center;\n    }\n\n    .no,\n    .yes {\n      padding: 10px;\n      height: 100%;\n    }\n    .no {\n      background-color: white;\n      color: #313439;\n      border-left: 2px solid #f7f7f7;\n    }\n    .yes {\n      background-color: #f36766;\n      border-radius: 0 20px 20px 0;\n    }\n  }\n`\n\nexport default function CartItem({\n  item,\n  styles,\n  removeItem,\n  setItemQuantity,\n}: {\n  item: CIInterface\n  styles: any\n  removeItem: (id: string, size: string) => void\n  setItemQuantity: (item: CIInterface, newQuantity: number) => void\n}) {\n  const [confirmDelete, setConfirmDelete] = useState(false)\n\n  const fade = useSpring({\n    opacity: confirmDelete ? 1 : 0,\n    pointerEvents: confirmDelete ? \"all\" : \"none\",\n  })\n\n  return (\n    <ItemStyles\n      style={styles}\n      className={\"item\"}\n      tabIndex={0}\n      onBlur={(event) => {\n        if (!event.currentTarget.contains(event.relatedTarget)) {\n          setConfirmDelete(false)\n        }\n      }}\n    >\n      <animated.div className=\"confirm-delete\" style={fade}>\n        <p>Remove this item?</p>\n        <button\n          onClick={() => {\n            setConfirmDelete(false)\n          }}\n          className=\"no\"\n        >\n          Cancel\n        </button>\n        <button\n          className=\"yes\"\n          onClick={() => {\n            setConfirmDelete(false)\n            removeItem(item.id, item.size)\n          }}\n        >\n          Remove\n        </button>\n      </animated.div>\n      <div className={\"flex\"}>\n        <Link transitionColor={item.accent_color} to={\"/\" + item.id}>\n          <GatsbyImage image={getImage(item.image)} alt={item.title} />\n        </Link>\n        <div className=\"info\">\n          <h2>{item.title}</h2>\n          <p className=\"price\">${item.price.msrp}</p>\n          <div className=\"quantity\">\n            <button\n              className=\"add\"\n              onClick={() =>\n                setItemQuantity(\n                  item,\n                  item.quantity < 10 ? item.quantity + 1 : 10\n                )\n              }\n            >\n              +\n            </button>\n            <span className=\"num\">{item.quantity}</span>\n            <button\n              className=\"minus\"\n              onClick={() => {\n                if (item.quantity - 1 == 0) {\n                  setConfirmDelete(true)\n                } else {\n                  setItemQuantity(\n                    item,\n                    item.quantity > 1 ? item.quantity - 1 : 1\n                  )\n                }\n              }}\n            >\n              -\n            </button>\n          </div>\n          <p className=\"size\">\n            {item.size[0]} : {item.weight}lbs\n          </p>\n          <button\n            className=\"delete\"\n            onClick={() => {\n              setConfirmDelete(true)\n            }}\n          >\n            <Trash color=\"#f36766\" width={30} />\n          </button>\n        </div>\n      </div>\n    </ItemStyles>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { CIInterface, MDXQuery, PIInterface } from \"types\"\nimport Helmet from \"src/components/Main/Helmet/Helmet\"\nimport CartItem from \"src/components/MyCart/CartItem\"\nimport { Page } from \"src/components/Main/Page/Page\"\nimport { useLocalStorage } from \"usehooks-ts\"\nimport { useTransition } from \"react-spring\"\nimport Cart from \"src/components/icons/Cart\"\nimport ClientRender from \"src/tools/ClientRender\"\nimport { Content, H3 } from \"src/styles\"\nimport styled from \"styled-components\"\n\nconst CartTabStyles = styled(Content)`\n  height: 100%;\n  background-color: white;\n  z-index: 0;\n  padding: 0 !important;\n  a.back-button {\n    position: absolute;\n    left: 20px;\n    margin-right: auto;\n    padding: 10px;\n    margin-top: 5px;\n  }\n  h3 {\n    width: 100%;\n    text-align: center;\n    padding: 23px 30px 30px;\n  }\n  section {\n    background-color: #f7f7f7;\n    border-radius: 30px 30px 0 0;\n    padding: 20px;\n    height: 95%;\n    padding-bottom: 40%;\n    overflow: auto;\n  }\n  overflow: hidden;\n\n  .no-items {\n    text-align: center;\n    top: 50%;\n    position: absolute;\n    left: 0;\n    right: 0;\n    transform: translateY(-50%);\n    svg {\n      margin-bottom: 20px;\n      margin-left: -20px;\n    }\n    p {\n      color: #c9c9c9;\n      font-family: system-ui;\n    }\n  }\n`\n\nconst NavStyles = styled(Content)`\n  position: fixed;\n  bottom: 0;\n  padding: 30px;\n  background: #fffffff2;\n  right: 0;\n  left: 0;\n  border-radius: 30px 30px 0 0;\n  box-shadow: rgb(0 0 0 / 5%) 0px 0px 20px;\n  backdrop-filter: blur(1px);\n  .sub,\n  .price {\n    display: flex;\n    justify-content: space-between;\n    font-family: system-ui;\n  }\n  .sub span,\n  .price span {\n    display: inline-block;\n  }\n  .sub {\n    color: #c9c9c9;\n    margin-bottom: 10px;\n  }\n  .price {\n    font-size: 23px;\n    line-height: 40px;\n    color: #313439;\n    border-top: 2px solid #e0e0e0;\n    margin-top: 10px;\n    padding-top: 10px;\n    margin-bottom: 10px;\n  }\n  button {\n    padding: 15px 20px;\n    background: #313439;\n    color: white;\n    border-radius: 20px;\n    font-size: 20px;\n    width: 100%;\n  }\n`\n\nfunction addZeroes(num: string) {\n  const dec = num.split(\".\")[1]\n  const len = dec && dec.length > 2 ? dec.length : 2\n  return Number(num).toFixed(len)\n}\n\nfunction getTotalPrices(itemsWithData: any[]) {\n  const sub_total = !itemsWithData\n    ? 0\n    : itemsWithData\n        .map((e) => e.quantity * e.price.msrp)\n        .reduce((a, b) => a + b, 0)\n  const sales_tax = +(sub_total * 0.16).toFixed(2)\n  const total = (sales_tax + sub_total).toFixed(2)\n  return {\n    sub_total,\n    sales_tax,\n    total,\n  }\n}\n\nconst createItemData = (\n  items: PIInterface[],\n  data: { allMdx: { edges: any[] } }\n): CIInterface[] => {\n  const final: CIInterface[] = []\n  if (items && items.length) {\n    items.forEach((item) => {\n      const id = item.id\n      const size = item.size\n      const quantity = item.quantity\n      data.allMdx.edges.forEach((catalogItem) => {\n        const cfm = catalogItem.node.frontmatter\n        if (cfm.id == id) {\n          cfm.inventory.forEach((inventoryItem: CIInterface) => {\n            if (inventoryItem.size == size)\n              final.push({\n                id,\n                title: cfm.title,\n                size: inventoryItem.size,\n                quantity,\n                price: { msrp: inventoryItem.price.msrp },\n                image: cfm.logo.source.childImageSharp,\n                weight: inventoryItem.weight,\n                accent_color: cfm.accent_color,\n              })\n          })\n        }\n      })\n    })\n  }\n  return final\n}\n\nexport default function MyCart({ data }: { data: MDXQuery }) {\n  const [items, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\n  const [itemsWithData, setItemsWithData] = useState<CIInterface[]>(\n    createItemData(items, data)\n  )\n  const { sub_total, sales_tax, total } = getTotalPrices(itemsWithData)\n\n  useEffect(() => {\n    setItemsWithData(createItemData(items, data))\n  }, [items])\n\n  const removeItem = (id: string, size: string) => {\n    setItems((prev) => {\n      return prev.filter((e) => e.id + e.size !== id + size)\n    })\n  }\n\n  const transitions = useTransition(\n    itemsWithData.map((item, i) => {\n      return { ...item }\n    }),\n    (d) => d.id + d.size,\n    {\n      from: { opacity: 0 },\n      enter: {\n        opacity: 1,\n        height: \"110px\",\n        paddingTop: \"15px\",\n        paddingBottom: \"15px\",\n        marginBottom: \"20px\",\n      },\n      leave: {\n        opacity: 0,\n        height: \"0px\",\n        paddingTop: \"0px\",\n        paddingBottom: \"0px\",\n        marginBottom: \"0px\",\n        overflow: \"hidden\",\n      },\n    }\n  )\n\n  const setItemQuantity = (item: CIInterface, newQuantity: number) => {\n    const index = items.findIndex((e) => e.id + e.size == item.id + item.size)\n    const newItem = { ...items[index], quantity: newQuantity }\n\n    items[index] = newItem\n    setItems(items)\n  }\n\n  return (\n    <Page navigation={{ home: true }}>\n      <Helmet\n        title=\"Delicious Mushrooms & Tasty Recipes! | TastySpore\"\n        description=\"Our Mushrooms grow kits are the best kits available for growing mushrooms indoors. With a 100% guarantee, we know you will love our mushrooms as much as we do.\"\n        keywords={[\n          \"mushroom\",\n          \"mushroom growing kit\",\n          \"mushroom drawing\",\n          \"mushroom menu\",\n          \"lion's mane mushroom\",\n          \"shiitake mushroom\",\n          \"enoki mushroom\",\n          \"reishi mushroom\",\n        ]}\n      />\n      <ClientRender>\n        <CartTabStyles>\n          <H3 className=\"cart\">My Cart</H3>\n          <section>\n            {transitions.map(({ item, props, key }, index) => (\n              <CartItem\n                item={item}\n                styles={props}\n                removeItem={removeItem}\n                setItemQuantity={setItemQuantity}\n                key={key}\n              />\n            ))}\n\n            {(!items || !items.length) && (\n              <div className=\"no-items\">\n                <Cart color=\"#dddddd\" width={150} />\n                <p>No Items In Cart</p>\n              </div>\n            )}\n          </section>\n          {items && items.length && (\n            <NavStyles as=\"div\">\n              <p className=\"sub\">\n                Sub total: <span>${sub_total}</span>\n              </p>\n              <p className=\"sub\">\n                Tax: <span>${addZeroes(sales_tax + \"\")}</span>\n              </p>\n              <p className=\"price\">\n                Total: <span>${total}</span>\n              </p>\n              <button\n                onClick={() => {\n                  alert(\n                    \"Thank you for your interest! Orders are currently disabled until we officially launch. Check back here soon for updates!\"\n                  )\n                }}\n              >\n                Continue to shipping\n              </button>\n            </NavStyles>\n          )}\n        </CartTabStyles>\n      </ClientRender>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: frontmatter___title }) {\n      edges {\n        node {\n          ...ProductFrontmatter\n        }\n      }\n    }\n  }\n`\n"],"names":["color","width","xmlns","height","viewBox","fill","d","ItemStyles","styled","animated","CartItem","item","styles","removeItem","setItemQuantity","useState","confirmDelete","setConfirmDelete","fade","useSpring","opacity","pointerEvents","style","className","tabIndex","onBlur","event","currentTarget","contains","relatedTarget","onClick","id","size","transitionColor","accent_color","to","G","image","getImage","alt","title","price","msrp","quantity","weight","Trash","CartTabStyles","Content","NavStyles","createItemData","items","data","final","length","forEach","allMdx","edges","catalogItem","cfm","node","frontmatter","inventory","inventoryItem","push","logo","source","childImageSharp","MyCart","useLocalStorage","setItems","itemsWithData","setItemsWithData","sub_total","map","e","reduce","a","b","sales_tax","toFixed","total","getTotalPrices","useEffect","num","dec","len","prev","filter","transitions","useTransition","i","from","enter","paddingTop","paddingBottom","marginBottom","leave","overflow","newQuantity","index","findIndex","newItem","Page","navigation","home","Helmet","description","keywords","ClientRender","H3","props","key","Cart","as","split","Number","alert"],"sourceRoot":""}