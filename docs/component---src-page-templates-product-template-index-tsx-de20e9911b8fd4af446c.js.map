{"version":3,"file":"component---src-page-templates-product-template-index-tsx-de20e9911b8fd4af446c.js","mappings":"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","sources":["webpack://tastyspore/./src/components/icons/Arrow.tsx","webpack://tastyspore/./src/page_templates/product_template/components/FullDescription.tsx","webpack://tastyspore/./src/page_templates/product_template/components/Sizes.tsx","webpack://tastyspore/./src/page_templates/product_template/Template.tsx","webpack://tastyspore/./src/page_templates/product_template/components/QuantityPrice.tsx","webpack://tastyspore/./src/page_templates/product_template/index.tsx"],"sourcesContent":["import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={width}\n      viewBox=\"0 0 128 128\"\n      fill={color}\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M30.371 58.25L86.324 2.297c3.258-3.066 8.238-3.066 11.305 0s3.066 8.047 0 11.305L47.234 63.997l50.395 50.395c3.066 3.066 3.066 8.238 0 11.305-3.066 3.066-8.047 3.066-11.305 0L30.371 69.552c-3.066-3.066-3.066-8.047 0-11.305z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React from \"react\"\nimport { ProductFrontmatterFragment } from \"../../../../types/gatsby-graphql\"\nimport \"./FullDescription.scss\"\n\nexport function FullDescription({\n  data,\n}: {\n  data: ProductFrontmatterFragment\n}) {\n  const fm = data?.frontmatter\n\n  if (!fm) return null\n  return (\n    <div className=\"full-description\">\n      <h2>Profile </h2>\n      <div className=\"profile\">\n        <div className=\"flavor\">\n          <h3>Flavor: </h3>\n          <ul>\n            {fm.profile.flavor.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"texture\">\n          <h3>Texture: </h3>\n          <ul>\n            {fm.profile.texture.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"aroma\">\n          <h3>Aroma: </h3>\n          <ul>\n            {fm.profile.aroma.map((e: string, key: number) => (\n              <li key={key}>{e}</li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"similar\" style={{ minWidth: \"200px\" }}>\n          <h3>Similar flavor to: </h3>\n          <ul>\n            {fm.profile.similar.map((e, key) => (\n              <li key={key}>{e}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className=\"aliases\">\n        <h2>Common Names</h2>\n        <ul>\n          {fm.aka.map((e, key) => (\n            <li key={key}>{e}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"description\">\n        <h2>Description</h2>\n        <p>\n          {fm.description} They prefer {fm.grow.temp.readable} temperatures of\n          around {fm.grow.temp.degrees.min}°F ~{fm.grow.temp.degrees.max}°F at a\n          humidity of {fm.grow.humidity}% and take approximatly {fm.grow.time}{\" \"}\n          to mature to the size of around {fm.grow.size}in.\n        </p>\n      </div>\n      <div className=\"benefits\">\n        <h2>Benefits</h2>\n        <ul>\n          {fm.benefits.map((e, key) => (\n            <li key={key}>{e}</li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"nutrition\">\n        <h2>Nutrition Values</h2>\n        <i>In 1 cup:</i>\n        <ul>\n          <li>calories: {fm.nutrition.calories}</li>\n          <li>carbs: {fm.nutrition.carbs}</li>\n          <li>protein: {fm.nutrition.protein}</li>\n          <li>fat: {fm.nutrition.fat}</li>\n          <li>fiber: {fm.nutrition.fiber}</li>\n        </ul>\n        <hr />\n        <h3>Vitamins</h3>\n        <ul className=\"vitamins\">\n          {fm.nutrition.vitamins.map((e, key) => (\n            <li key={key}>\n              {e.name}: {e.value}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport function Sizes({\n  inventory,\n  size,\n  setSize,\n}: {\n  inventory: any\n  size: string\n  setSize: React.Dispatch<React.SetStateAction<string>>\n}) {\n  if (!inventory || !size || !setSize) return null\n  return (\n    <div className=\"sizes\">\n      {inventory &&\n        inventory.map((item: any, idx: number) => (\n          <div\n            key={idx}\n            className={\n              item?.size +\n              (item?.size == size ? \" selected\" : \"\") +\n              (item.quantity == 0 ? \" out-of-stock\" : \"\")\n            }\n            onClick={() => {\n              setSize(item?.size as string)\n            }}\n          >\n            <p className=\"size-label\">{item?.size}</p>\n            {item?.weight}\n            <span className=\"unit\">lbs</span>\n            {item.quantity == 0 ? (\n              <p className=\"out-label\">out of stock</p>\n            ) : (\n              <p className=\"price price-label\">\n                <span>$</span>\n                {item.price.msrp}\n              </p>\n            )}\n          </div>\n        ))}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { ProductFrontmatterFragment } from \"../../../types/gatsby-graphql\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Arrow from \"../../components/icons/Arrow\"\nimport { FullDescription } from \"./components/FullDescription\"\nimport { Sizes } from \"./components/Sizes\"\nimport { QuantityPrice } from \"./components/QuantityPrice\"\n\nimport \"./Template.scss\"\nimport { navigate } from \"gatsby\"\nimport Helmet from \"../../components/Main/Helmet/Helmet\"\nimport { PIInterface } from \"../../../types\"\nimport { useLocalStorage } from \"usehooks-ts\"\n\nexport function Template({ d }: { d: any }) {\n  const data: ProductFrontmatterFragment = d?.mdx\n  const fm = data.frontmatter\n\n  // selected item specs\n  const defaultSize = \"medium\"\n  const [size, setSize] = useState(defaultSize)\n  const [quantity, setQuantity] = useState(1)\n\n  // items in cart\n  const [_, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\n\n  const selectedItem = fm?.inventory.filter(\n    (item: any) => item?.size == size\n  )[0]\n  const maxQuantity = selectedItem.quantity\n\n  const accentColor = fm?.accent_color as string\n  const mdxStyle = { \"--accentColor\": accentColor } as React.CSSProperties\n\n  if (!fm?.logo || !fm?.logo.source) return null\n  const image = getImage(fm?.logo?.source.childImageSharp?.gatsbyImageData)\n\n  const price = selectedItem?.price?.sale\n    ? selectedItem.price.sale * quantity\n    : selectedItem?.price?.msrp * quantity\n\n  const setCartItems = (id: string, size: string, quantity: number) => {\n    setItems((prev) => {\n      console.log(prev)\n\n      if (prev == undefined) {\n        return [{ id, size, quantity }]\n      }\n\n      let prevQuantity = 0\n      return prev\n        .filter((e) => {\n          if (e.id + e.size !== id + size) {\n            return true\n          } else {\n            prevQuantity = e.quantity\n          }\n        })\n        .concat({\n          id,\n          size,\n          quantity:\n            quantity + prevQuantity <= maxQuantity\n              ? quantity + prevQuantity\n              : maxQuantity,\n        })\n    })\n    setQuantity(1)\n  }\n\n  useEffect(() => {\n    if (quantity > selectedItem.quantity) {\n      setQuantity(selectedItem.quantity)\n    }\n  }, [size])\n\n  return (\n    <div className=\"product-page\" style={mdxStyle}>\n      <Helmet\n        title={fm.readable_class + \" \" + fm.readable_category + \" | TastySpore\"}\n        description={fm.description}\n        keywords={[\n          \"mushroom\",\n          \"mushroom growing kit\",\n          \"how to grow mushrooms\",\n          fm.scientific_name,\n          ...fm.aka,\n          ...fm.benefits,\n        ]}\n      />\n      <button className=\"close\" onClick={() => navigate(-1)}>\n        <Arrow color=\"#3e3e3e\" width={20} />\n      </button>\n      <div className=\"content\">\n        <div className=\"image\">\n          {image && <GatsbyImage image={image} alt={fm?.title as string} />}\n        </div>\n        <h3>{fm?.readable_category}</h3>\n        <h2 style={{ color: accentColor }}>\n          {fm?.readable_class} <span>({fm?.scientific_name})</span>\n        </h2>\n        <p className=\"select-size-label\">(select a size)</p>\n        <Sizes inventory={fm.inventory} size={size} setSize={setSize} />\n        <hr />\n        <FullDescription data={data} />\n      </div>\n      <div className=\"bottom\">\n        <p className=\"price\" style={{ color: accentColor }}>\n          <span>$</span>\n          {price}\n        </p>\n        {QuantityPrice(setQuantity, maxQuantity, quantity)}\n        <button\n          className={\n            \"buy\" + (selectedItem.quantity == 0 ? \" out-of-stock\" : \"\")\n          }\n          style={{ backgroundColor: accentColor }}\n          onClick={() => {\n            setCartItems(fm.id, size, quantity)\n          }}\n        >\n          {selectedItem.quantity == 0 ? <span>No Stock</span> : <span>+</span>}\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\n\nexport function QuantityPrice(\n  setQuantity: React.Dispatch<React.SetStateAction<number>>,\n  maxQuantity: number,\n  quantity: number\n) {\n  return (\n    <div className=\"quantity-and-price\">\n      <div className=\"quantity\">\n        <button\n          className=\"add\"\n          onClick={() => {\n            setQuantity((prev) => (prev < maxQuantity ? prev + 1 : maxQuantity))\n          }}\n        >\n          +\n        </button>\n        <span className=\"num\">{quantity}</span>\n        <button\n          className=\"minus\"\n          onClick={() => {\n            setQuantity((prev) => (prev > 1 ? prev - 1 : 1))\n          }}\n        >\n          -\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Page } from \"../../components/Main/Page/Page\"\nimport { Template } from \"./Template\"\nimport CartIcon from \"../../components/MyCart/CartIcon\"\n\nexport default function Main({ data }: { data: any }) {\n  return (\n    <Page>\n      <CartIcon d={data} />\n      <Template d={data} />\n    </Page>\n  )\n}\n\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    mdx(frontmatter: { id: { eq: $id } }) {\n      ...ProductFrontmatter\n    }\n  }\n`\n"],"names":["color","width","xmlns","height","viewBox","fill","fillRule","d","FullDescription","data","fm","frontmatter","className","profile","flavor","map","e","key","texture","aroma","style","minWidth","similar","aka","description","grow","temp","readable","degrees","min","max","humidity","time","size","benefits","nutrition","calories","carbs","protein","fat","fiber","vitamins","name","value","Sizes","inventory","setSize","item","idx","quantity","onClick","weight","price","msrp","Template","mdx","useState","setQuantity","useLocalStorage","setItems","selectedItem","filter","maxQuantity","accentColor","accent_color","mdxStyle","logo","source","image","getImage","childImageSharp","gatsbyImageData","sale","useEffect","Helmet","title","readable_class","readable_category","keywords","scientific_name","navigate","Arrow","G","alt","prev","QuantityPrice","backgroundColor","id","console","log","undefined","prevQuantity","concat","setCartItems","Main","Page","CartIcon"],"sourceRoot":""}