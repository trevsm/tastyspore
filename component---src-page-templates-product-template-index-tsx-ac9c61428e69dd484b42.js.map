{"version":3,"file":"component---src-page-templates-product-template-index-tsx-ac9c61428e69dd484b42.js","mappings":"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","sources":["webpack://tastyspore/./src/components/MyCart/CartIcon.tsx","webpack://tastyspore/./src/components/icons/Home.tsx","webpack://tastyspore/./src/page_templates/product_template/components/FullDescription.tsx","webpack://tastyspore/./src/page_templates/product_template/components/Sizes.tsx","webpack://tastyspore/./src/page_templates/product_template/Template.tsx","webpack://tastyspore/./src/page_templates/product_template/components/QuantityPrice.tsx","webpack://tastyspore/./src/page_templates/product_template/index.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { PIInterface } from \"../../../types\"\r\nimport Cart from \"../icons/Cart\"\r\nimport { animated, useSpring } from \"react-spring\"\r\nimport { useLocalStorage, useEventListener } from \"usehooks-ts\"\r\nimport { ProductFrontmatterFragment } from \"../../../types/gatsby-graphql\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport ClientRender from \"../../tools/ClientRender\"\r\n\r\nexport default function CartIcon({ d }: { d: any }) {\r\n  const data: ProductFrontmatterFragment = d?.mdx\r\n\r\n  const [items, _] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\r\n  const [showNotification, setShowNotification] = useState(false)\r\n  const notificationTimeout = useRef(null)\r\n\r\n  const notificationSpring = useSpring({\r\n    transform: !showNotification ? \"translateY(-101%)\" : \"translateY(0%)\",\r\n    opacity: showNotification ? 1 : 0,\r\n  })\r\n\r\n  useEventListener(\"local-storage\", () => {\r\n    if (!showNotification) setShowNotification(true)\r\n\r\n    clearTimeout(notificationTimeout.current)\r\n    notificationTimeout.current = setTimeout(() => {\r\n      setShowNotification(false)\r\n    }, 2000)\r\n  })\r\n\r\n  let itemCount = 0\r\n  items && items.forEach((e) => (itemCount += e.quantity))\r\n\r\n  const lastItem = items && items.length ? items[items.length - 1] : null\r\n  const maxQuantity =\r\n    lastItem && data\r\n      ? data.frontmatter.inventory.filter((e) => e.size == lastItem.size)[0]\r\n          .quantity\r\n      : 0\r\n\r\n  return (\r\n    <ClientRender>\r\n      {items && items.length > 0 && (\r\n        <animated.div style={notificationSpring} className=\"notification-popup\">\r\n          <p>\r\n            Added [{lastItem.id}] to your cart!{\" \"}\r\n            {lastItem?.quantity == maxQuantity && (\r\n              <span className=\"max-10\">[Max: {lastItem?.quantity}]</span>\r\n            )}\r\n          </p>\r\n        </animated.div>\r\n      )}\r\n      <AniLink paintDrip hex=\"#fbfbfb\" to=\"/checkout\" className={\"cart-icon\"}>\r\n        {items && items.length ? <span className=\"item-count\"></span> : \"\"}\r\n        <Cart color=\"#3e3e3e\" width={30} />\r\n      </AniLink>\r\n    </ClientRender>\r\n  )\r\n}\r\n","import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0\"\n      y=\"0\"\n      viewBox=\"0 0 32 32\"\n      width={width}\n      height={width}\n    >\n      <path\n        fill={color}\n        d=\"M26 16.978V25a3.003 3.003 0 01-3 3h-2a3.003 3.003 0 01-3-3v-2a1.001 1.001 0 00-1-1h-2a1.001 1.001 0 00-1 1v2a3.003 3.003 0 01-3 3H9a3.003 3.003 0 01-3-3v-8.022a2.981 2.981 0 011.158-2.368l8.228-6.4a1.001 1.001 0 011.228 0l8.228 6.4A2.982 2.982 0 0126 16.978zm3.608-2.772L17.772 5.143a3.001 3.001 0 00-3.661.01L2.423 14.21a1 1 0 001.225 1.582l11.688-9.057a1.002 1.002 0 011.22-.004l11.836 9.064a1 1 0 001.216-1.588z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React from \"react\"\r\nimport { ProductFrontmatterFragment } from \"../../../../types/gatsby-graphql\"\r\nimport \"./FullDescription.scss\"\r\n\r\nexport function FullDescription({\r\n  data,\r\n}: {\r\n  data: ProductFrontmatterFragment\r\n}) {\r\n  const fm = data?.frontmatter\r\n\r\n  if (!fm) return null\r\n  return (\r\n    <div className=\"full-description\">\r\n      <h2>Profile </h2>\r\n      <div className=\"profile\">\r\n        <div className=\"flavor\">\r\n          <h3>Flavor: </h3>\r\n          <ul>\r\n            {fm.profile.flavor.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"texture\">\r\n          <h3>Texture: </h3>\r\n          <ul>\r\n            {fm.profile.texture.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"aroma\">\r\n          <h3>Aroma: </h3>\r\n          <ul>\r\n            {fm.profile.aroma.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"similar\" style={{ minWidth: \"200px\" }}>\r\n          <h3>Similar flavor to: </h3>\r\n          <ul>\r\n            {fm.profile.similar.map((e, key) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"aliases\">\r\n        <h2>Common Names</h2>\r\n        <ul>\r\n          {fm.aka.map((e, key) => (\r\n            <li key={key}>{e}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"description\">\r\n        <h2>Description</h2>\r\n        <p>\r\n          {fm.description} They prefer {fm.grow.temp.readable} temperatures of\r\n          around {fm.grow.temp.degrees.min}°F ~{fm.grow.temp.degrees.max}°F at a\r\n          humidity of {fm.grow.humidity}% and take approximatly {fm.grow.time}{\" \"}\r\n          to mature to the size of around {fm.grow.size}in.\r\n        </p>\r\n      </div>\r\n      <div className=\"benefits\">\r\n        <h2>Benefits</h2>\r\n        <ul>\r\n          {fm.benefits.map((e, key) => (\r\n            <li key={key}>{e}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"nutrition\">\r\n        <h2>Nutrition Values</h2>\r\n        <i>In 1 cup:</i>\r\n        <ul>\r\n          <li>calories: {fm.nutrition.calories}</li>\r\n          <li>carbs: {fm.nutrition.carbs}</li>\r\n          <li>protein: {fm.nutrition.protein}</li>\r\n          <li>fat: {fm.nutrition.fat}</li>\r\n          <li>fiber: {fm.nutrition.fiber}</li>\r\n        </ul>\r\n        <hr />\r\n        <h3>Vitamins</h3>\r\n        <ul className=\"vitamins\">\r\n          {fm.nutrition.vitamins.map((e, key) => (\r\n            <li key={key}>\r\n              {e.name}: {e.value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function Sizes({\r\n  inventory,\r\n  size,\r\n  setSize,\r\n}: {\r\n  inventory: any\r\n  size: string\r\n  setSize: React.Dispatch<React.SetStateAction<string>>\r\n}) {\r\n  if (!inventory || !size || !setSize) return null\r\n  return (\r\n    <div className=\"sizes\">\r\n      {inventory &&\r\n        inventory.map((item: any, idx: number) => (\r\n          <div\r\n            key={idx}\r\n            className={\r\n              item?.size +\r\n              (item?.size == size ? \" selected\" : \"\") +\r\n              (item.quantity == 0 ? \" out-of-stock\" : \"\")\r\n            }\r\n            onClick={() => {\r\n              setSize(item?.size as string)\r\n            }}\r\n          >\r\n            <p className=\"size-label\">{item?.size}</p>\r\n            {item?.weight}\r\n            <span className=\"unit\">lbs</span>\r\n            {item.quantity == 0 ? (\r\n              <p className=\"out-label\">out of stock</p>\r\n            ) : (\r\n              <p className=\"price price-label\">\r\n                <span>$</span>\r\n                {item.price.msrp}\r\n              </p>\r\n            )}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { ProductFrontmatterFragment } from \"../../../types/gatsby-graphql\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\n\r\nimport Home from \"../../components/icons/Home\"\r\nimport { FullDescription } from \"./components/FullDescription\"\r\nimport { Sizes } from \"./components/Sizes\"\r\nimport { QuantityPrice } from \"./components/QuantityPrice\"\r\n\r\nimport \"./Template.scss\"\r\nimport { navigate } from \"gatsby\"\r\nimport Helmet from \"../../components/Main/Helmet/Helmet\"\r\nimport { PIInterface } from \"../../../types\"\r\nimport { useLocalStorage } from \"usehooks-ts\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n\r\nexport function Template({ d }: { d: any }) {\r\n  const data: ProductFrontmatterFragment = d?.mdx\r\n  const fm = data.frontmatter\r\n\r\n  // selected item specs\r\n  const defaultSize = \"medium\"\r\n  const [size, setSize] = useState(defaultSize)\r\n  const [quantity, setQuantity] = useState(1)\r\n\r\n  // items in cart\r\n  const [_, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\r\n\r\n  const selectedItem = fm?.inventory.filter(\r\n    (item: any) => item?.size == size\r\n  )[0]\r\n  const maxQuantity = selectedItem.quantity\r\n\r\n  const accentColor = fm?.accent_color as string\r\n  const mdxStyle = { \"--accentColor\": accentColor } as React.CSSProperties\r\n\r\n  if (!fm?.logo || !fm?.logo.source) return null\r\n  const image = getImage(fm?.logo?.source.childImageSharp?.gatsbyImageData)\r\n\r\n  const price = selectedItem?.price?.sale\r\n    ? selectedItem.price.sale * quantity\r\n    : selectedItem?.price?.msrp * quantity\r\n\r\n  const setCartItems = (id: string, size: string, quantity: number) => {\r\n    setItems((prev) => {\r\n      console.log(prev)\r\n\r\n      if (prev == undefined) {\r\n        return [{ id, size, quantity }]\r\n      }\r\n\r\n      let prevQuantity = 0\r\n      return prev\r\n        .filter((e) => {\r\n          if (e.id + e.size !== id + size) {\r\n            return true\r\n          } else {\r\n            prevQuantity = e.quantity\r\n          }\r\n        })\r\n        .concat({\r\n          id,\r\n          size,\r\n          quantity:\r\n            quantity + prevQuantity <= maxQuantity\r\n              ? quantity + prevQuantity\r\n              : maxQuantity,\r\n        })\r\n    })\r\n    setQuantity(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quantity > selectedItem.quantity) {\r\n      setQuantity(selectedItem.quantity)\r\n    }\r\n  }, [size])\r\n\r\n  return (\r\n    <div className=\"product-page\" style={mdxStyle}>\r\n      <Helmet\r\n        title={fm.readable_class + \" \" + fm.readable_category + \" | TastySpore\"}\r\n        description={fm.description}\r\n        keywords={[\r\n          \"mushroom\",\r\n          \"mushroom growing kit\",\r\n          \"how to grow mushrooms\",\r\n          fm.scientific_name,\r\n          ...fm.aka,\r\n          ...fm.benefits,\r\n        ]}\r\n      />\r\n      <AniLink paintDrip hex=\"#fff0e4\" className=\"close\" to=\"/\">\r\n        <Home color=\"#3e3e3e\" width={35} />\r\n      </AniLink>\r\n      <div className=\"content\">\r\n        <div className=\"image\">\r\n          {image && <GatsbyImage image={image} alt={fm?.title as string} />}\r\n        </div>\r\n        <h3>{fm?.readable_category}</h3>\r\n        <h2 style={{ color: accentColor }}>\r\n          {fm?.readable_class} <span>({fm?.scientific_name})</span>\r\n        </h2>\r\n        <p className=\"select-size-label\">(select a size)</p>\r\n        <Sizes inventory={fm.inventory} size={size} setSize={setSize} />\r\n        <hr />\r\n        <FullDescription data={data} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <div className=\"bottom content\">\r\n        <p className=\"price\" style={{ color: accentColor }}>\r\n          <span>$</span>\r\n          {price}\r\n        </p>\r\n        {QuantityPrice(setQuantity, maxQuantity, quantity)}\r\n        <button\r\n          className={\r\n            \"buy\" + (selectedItem.quantity == 0 ? \" out-of-stock\" : \"\")\r\n          }\r\n          style={{ backgroundColor: accentColor }}\r\n          onClick={() => {\r\n            setCartItems(fm.id, size, quantity)\r\n          }}\r\n        >\r\n          {selectedItem.quantity == 0 ? <span>No Stock</span> : <span>+</span>}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function QuantityPrice(\r\n  setQuantity: React.Dispatch<React.SetStateAction<number>>,\r\n  maxQuantity: number,\r\n  quantity: number\r\n) {\r\n  return (\r\n    <div className=\"quantity-and-price\">\r\n      <div className=\"quantity\">\r\n        <button\r\n          className=\"add\"\r\n          onClick={() => {\r\n            setQuantity((prev) => (prev < maxQuantity ? prev + 1 : maxQuantity))\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <span className=\"num\">{quantity}</span>\r\n        <button\r\n          className=\"minus\"\r\n          onClick={() => {\r\n            setQuantity((prev) => (prev > 1 ? prev - 1 : 1))\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Page } from \"../../components/Main/Page/Page\"\r\nimport { Template } from \"./Template\"\r\nimport CartIcon from \"../../components/MyCart/CartIcon\"\r\n\r\nexport default function Main({ data }: { data: any }) {\r\n  return (\r\n    <Page>\r\n      <CartIcon d={data} />\r\n      <Template d={data} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ($id: String!) {\r\n    mdx(frontmatter: { id: { eq: $id } }) {\r\n      ...ProductFrontmatter\r\n    }\r\n  }\r\n`\r\n"],"names":["CartIcon","d","data","mdx","useLocalStorage","items","useState","showNotification","setShowNotification","notificationTimeout","useRef","notificationSpring","useSpring","transform","opacity","useEventListener","clearTimeout","current","setTimeout","itemCount","forEach","e","quantity","lastItem","length","maxQuantity","frontmatter","inventory","filter","size","style","className","id","paintDrip","hex","to","color","width","xmlns","x","y","viewBox","height","fill","FullDescription","fm","profile","flavor","map","key","texture","aroma","minWidth","similar","aka","description","grow","temp","readable","degrees","min","max","humidity","time","benefits","nutrition","calories","carbs","protein","fat","fiber","vitamins","name","value","Sizes","setSize","item","idx","onClick","weight","price","msrp","Template","setQuantity","setItems","selectedItem","accentColor","accent_color","mdxStyle","logo","source","image","getImage","childImageSharp","gatsbyImageData","sale","useEffect","Helmet","title","readable_class","readable_category","keywords","scientific_name","AniLink","Home","G","alt","prev","QuantityPrice","backgroundColor","console","log","undefined","prevQuantity","concat","setCartItems","Main","Page"],"sourceRoot":""}