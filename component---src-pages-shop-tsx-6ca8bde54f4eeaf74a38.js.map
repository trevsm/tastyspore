{"version":3,"file":"component---src-pages-shop-tsx-6ca8bde54f4eeaf74a38.js","mappings":"oNAOe,SAASA,EAAT,GAA+D,IAAD,QAA9CC,EAA8C,EAA9CA,KACvBC,EAAKD,EAAKE,YAEhB,GAAKD,MAAAA,GAAD,UAACA,EAAIE,YAAL,QAAC,EAAUC,OAAQ,OAAO,KAC9B,IAAMC,GAAQC,EAAAA,EAAAA,GAASL,MAAAA,GAAD,UAACA,EAAIE,YAAL,iBAAC,EAAUC,cAAX,iBAAC,EAAkBG,uBAAnB,aAAC,EAAmCC,iBAEpDC,EAAQR,MAAAA,OAAH,EAAGA,EAAIS,UAAU,GAAGD,MAE/B,OACE,uBAAKE,UAAU,aACb,gBAACC,EAAA,EAAD,CAASC,WAAS,EAACC,IAAKb,EAAGc,aAAcC,GAAI,IAAMhB,EAAKE,YAAYe,IAClE,+BACE,uBAAKN,UAAU,QACb,uBAAKA,UAAU,SACZN,GAAS,gBAAC,EAAAa,EAAD,CAAab,MAAOA,EAAOc,IAAKlB,MAAAA,OAAF,EAAEA,EAAImB,SAEhD,uBAAKT,UAAU,QACb,0BAAKV,MAAAA,OAAL,EAAKA,EAAImB,OACT,qBAAGT,UAAU,WAAWV,MAAAA,OAAxB,EAAwBA,EAAIoB,SAC5B,uBAAKV,UAAU,UACZF,EAAMa,KACL,qBAAGX,UAAU,QACX,wBAAMA,UAAU,SAAhB,IAA0BF,EAAMc,MAChC,wBAAMZ,UAAU,QAAhB,IAAyBF,EAAMa,OAGjC,wBAAMX,UAAU,QAAhB,IAAyBF,EAAMc,MAEjC,qBAAGZ,UAAU,aAAb,aACY,wCChCb,SAASa,EAAT,GACb,OAD0D,EAAzBC,MACpBC,KAAI,SAAC1B,EAAkC2B,GAClD,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAU/B,IAGpC,OAFiB4B,EAAEI,KAAK9B,YAAY+B,UAEjB,gBAAClC,EAAD,CAAMmC,IAAKP,EAAK3B,KAAM4B,EAAEI,UCFhC,SAASG,EAAT,GAA6C,IACpDV,EADmD,EAA5BzB,KACVoC,OAAOC,MAC1B,GAAwCC,EAAAA,EAAAA,UAAS,OAA1CC,EAAP,KAAqBC,EAArB,KAEMC,EAAgBhB,EAAMiB,QAC1B,SAACC,GAAD,OACEA,EAAEX,KAAK9B,YAAYqC,cAAgBA,GAAgC,OAAhBA,KAEvD,OACE,gBAACK,EAAA,EAAD,CAAMC,WAAY,CAAEC,MAAM,EAAMC,MAAM,IACpC,gBAACC,EAAA,EAAD,CACE5B,MAAM,oDACN6B,YAAY,kKACZC,SAAU,CACR,WACA,uBACA,mBACA,gBACA,uBACA,oBACA,iBACA,qBAGJ,uBAAKvC,UAAU,gBACb,uBAAKA,UAAU,cACb,0BACEwC,QAAS,kBAAMX,EAAgB,QAC/B7B,UAA2B,OAAhB4B,EAAwB,SAAW,IAFhD,OAMA,0BACEY,QAAS,kBAAMX,EAAgB,wBAC/B7B,UAA2B,uBAAhB4B,EAAwC,SAAW,IAFhE,oBAMA,0BACEY,QAAS,kBAAMX,EAAgB,2BAC/B7B,UAA2B,0BAAhB4B,EAA2C,SAAW,IAFnE,wBAOF,uBAAK5B,UAAU,YACb,gBAACa,EAAD,CAAUC,MAAOgB","sources":["webpack://tastyspore/./src/components/Card/Card.tsx","webpack://tastyspore/./src/components/partials/Featured/Featured.tsx","webpack://tastyspore/./src/pages/shop.tsx"],"sourcesContent":["import React from \"react\"\nimport { GatsbyImage, getImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport { ProductFrontmatterFragment } from \"../../../types/gatsby-graphql\"\nimport \"./Card.scss\"\nimport { Link } from \"gatsby\"\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\n\nexport default function Card({ data }: { data: ProductFrontmatterFragment }) {\n  const fm = data.frontmatter\n\n  if (!fm?.logo?.source) return null\n  const image = getImage(fm?.logo?.source?.childImageSharp?.gatsbyImageData)\n\n  const price = fm?.inventory[1].price\n\n  return (\n    <div className=\"blob card\">\n      <AniLink paintDrip hex={fm.accent_color} to={\"/\" + data.frontmatter.id}>\n        <section>\n          <div className=\"flex\">\n            <div className=\"image\">\n              {image && <GatsbyImage image={image} alt={fm?.title as string} />}\n            </div>\n            <div className=\"text\">\n              <h2>{fm?.title}</h2>\n              <p className=\"summary\">{fm?.summary}</p>\n              <div className=\"bottom\">\n                {price.sale ? (\n                  <p className=\"sale\">\n                    <span className=\"cross\">${price.msrp}</span>\n                    <span className=\"cost\">${price.sale}</span>\n                  </p>\n                ) : (\n                  <span className=\"cost\">${price.msrp}</span>\n                )}\n                <p className=\"more-info\">\n                  more info <span>+</span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </AniLink>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Card } from \"..\"\nimport { ProductFrontmatterFragment } from \"../../../../types/gatsby-graphql\"\n\nexport default function Featured({ nodes }: { nodes: any }) {\n  return nodes.map((data: ProductFrontmatterFragment, idx: number) => {\n    const d = JSON.parse(JSON.stringify(data))\n    const featured = d.node.frontmatter.featured\n\n    return featured && <Card key={idx} data={d.node} />\n  })\n}\n","import { graphql } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport { MDXQuery } from \"../../types\"\nimport Helmet from \"../components/Main/Helmet/Helmet\"\nimport { Page } from \"../components/Main/Page/Page\"\nimport Featured from \"../components/partials/Featured/Featured\"\n\nexport default function Shop({ data }: { data: MDXQuery }) {\n  const nodes = data.allMdx.edges\n  const [sub_category, setSub_Category] = useState(\"all\")\n\n  const filteredNodes = nodes.filter(\n    (e) =>\n      e.node.frontmatter.sub_category == sub_category || sub_category == \"all\"\n  )\n  return (\n    <Page navigation={{ home: true, cart: true }}>\n      <Helmet\n        title=\"Delicious Mushrooms & Tasty Recipes! | TastySpore\"\n        description=\"Our Mushrooms grow kits are the best kits available for growing mushrooms indoors. With a 100% guarantee, we know you will love our mushrooms as much as we do.\"\n        keywords={[\n          \"mushroom\",\n          \"mushroom growing kit\",\n          \"mushroom drawing\",\n          \"mushroom menu\",\n          \"lion's mane mushroom\",\n          \"shiitake mushroom\",\n          \"enoki mushroom\",\n          \"reishi mushroom\",\n        ]}\n      />\n      <div className=\"shop content\">\n        <div className=\"categories\">\n          <button\n            onClick={() => setSub_Category(\"all\")}\n            className={sub_category == \"all\" ? \"active\" : \"\"}\n          >\n            All\n          </button>\n          <button\n            onClick={() => setSub_Category(\"oyster-mushroom-kit\")}\n            className={sub_category == \"oyster-mushroom-kit\" ? \"active\" : \"\"}\n          >\n            Oyster Mushrooms\n          </button>\n          <button\n            onClick={() => setSub_Category(\"medicinal-mushroom-kit\")}\n            className={sub_category == \"medicinal-mushroom-kit\" ? \"active\" : \"\"}\n          >\n            Medicinal Mushrooms\n          </button>\n        </div>\n        <div className=\"featured\">\n          <Featured nodes={filteredNodes} />\n        </div>\n      </div>\n    </Page>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { order: DESC, fields: frontmatter___title }) {\n      edges {\n        node {\n          ...ProductFrontmatter\n        }\n      }\n    }\n  }\n`\n"],"names":["Card","data","fm","frontmatter","logo","source","image","getImage","childImageSharp","gatsbyImageData","price","inventory","className","AniLink","paintDrip","hex","accent_color","to","id","G","alt","title","summary","sale","msrp","Featured","nodes","map","idx","d","JSON","parse","stringify","node","featured","key","Shop","allMdx","edges","useState","sub_category","setSub_Category","filteredNodes","filter","e","Page","navigation","home","cart","Helmet","description","keywords","onClick"],"sourceRoot":""}