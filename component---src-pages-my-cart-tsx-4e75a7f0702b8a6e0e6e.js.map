{"version":3,"file":"component---src-pages-my-cart-tsx-4e75a7f0702b8a6e0e6e.js","mappings":"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","sources":["webpack://tastyspore/./src/components/icons/Home.tsx","webpack://tastyspore/./src/components/icons/Trash.tsx","webpack://tastyspore/./src/components/MyCart/CartItem.tsx","webpack://tastyspore/./src/pages/my_cart.tsx"],"sourcesContent":["import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0\"\n      y=\"0\"\n      viewBox=\"0 0 32 32\"\n      width={width}\n      height={width}\n    >\n      <path\n        fill={color}\n        d=\"M26 16.978V25a3.003 3.003 0 01-3 3h-2a3.003 3.003 0 01-3-3v-2a1.001 1.001 0 00-1-1h-2a1.001 1.001 0 00-1 1v2a3.003 3.003 0 01-3 3H9a3.003 3.003 0 01-3-3v-8.022a2.981 2.981 0 011.158-2.368l8.228-6.4a1.001 1.001 0 011.228 0l8.228 6.4A2.982 2.982 0 0126 16.978zm3.608-2.772L17.772 5.143a3.001 3.001 0 00-3.661.01L2.423 14.21a1 1 0 001.225 1.582l11.688-9.057a1.002 1.002 0 011.22-.004l11.836 9.064a1 1 0 001.216-1.588z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React from \"react\"\r\n\r\nfunction Icon({ color, width }: { color: string; width: number }) {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width}\r\n      height={width}\r\n      viewBox=\"300 300 600 600\"\r\n    >\r\n      <path\r\n        fill={color}\r\n        d=\"M822 600c0 122.61-99.395 222-222 222s-222-99.395-222-222 99.395-222 222-222 222 99.395 222 222zm-408 0c0 102.73 83.273 186 186 186s186-83.273 186-186-83.273-186-186-186-186 83.273-186 186zm211.46 0l59.27 59.273c7.031 7.027 7.031 18.426 0 25.453-7.027 7.031-18.426 7.031-25.453 0l-59.273-59.27-59.273 59.27c-7.027 7.031-18.426 7.031-25.453 0-7.031-7.027-7.031-18.426 0-25.453L574.548 600l-59.27-59.273c-7.031-7.027-7.031-18.426 0-25.453 7.027-7.031 18.426-7.031 25.453 0l59.273 59.27 59.273-59.27c7.027-7.031 18.426-7.031 25.453 0 7.031 7.027 7.031 18.426 0 25.453z\"\r\n      ></path>\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Icon\r\n","import React, { useState } from \"react\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\nimport Trash from \"../icons/Trash\"\r\nimport \"./CartItem.scss\"\r\nimport { CIInterface } from \"../../../types\"\r\nimport { Link } from \"gatsby\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport { animated, useSpring } from \"react-spring\"\r\n\r\nexport default function CartItem({\r\n  item,\r\n  styles,\r\n  removeItem,\r\n}: {\r\n  item: CIInterface\r\n  styles: any\r\n  removeItem: (id: string, size: string) => void\r\n}) {\r\n  const [confirmDelete, setConfirmDelete] = useState(false)\r\n\r\n  const fade = useSpring({\r\n    opacity: confirmDelete ? 1 : 0,\r\n    pointerEvents: confirmDelete ? \"auto\" : \"none\",\r\n  })\r\n\r\n  return (\r\n    <animated.div\r\n      style={styles}\r\n      className={\"item\"}\r\n      tabIndex={0}\r\n      onBlur={() => {\r\n        setConfirmDelete(false)\r\n      }}\r\n    >\r\n      <animated.div className=\"confirm-delete\" style={fade}>\r\n        <p>Remove this item?</p>\r\n        <button\r\n          onClick={() => {\r\n            setConfirmDelete(false)\r\n          }}\r\n          className=\"no\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          className=\"yes\"\r\n          onClick={() => {\r\n            setConfirmDelete(false)\r\n            removeItem(item.id, item.size)\r\n          }}\r\n        >\r\n          Remove\r\n        </button>\r\n      </animated.div>\r\n      <div className={\"flex\"}>\r\n        <AniLink paintDrip hex={item.accent_color} to={\"/\" + item.id}>\r\n          <GatsbyImage image={getImage(item.image)} alt={item.title} />\r\n        </AniLink>\r\n        <div className=\"info\">\r\n          <h2>{item.title}</h2>\r\n          <p className=\"price\">${item.price.msrp}</p>\r\n          <div className=\"quantity\">Quantity: {item.quantity}</div>\r\n          <p className=\"size\">\r\n            {item.size[0]} : {item.weight}lbs\r\n          </p>\r\n          <button\r\n            className=\"delete\"\r\n            onClick={() => {\r\n              setConfirmDelete(true)\r\n            }}\r\n          >\r\n            <Trash color=\"#f36766\" width={30} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo, useRef, useState } from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { CIInterface, MDXQuery, PIInterface } from \"../../types\"\r\nimport Helmet from \"../components/Main/Helmet/Helmet\"\r\nimport CartItem from \"../components/MyCart/CartItem\"\r\nimport Home from \"../components/icons/Home\"\r\nimport { Page } from \"../components/Main/Page/Page\"\r\nimport { useLocalStorage } from \"usehooks-ts\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\nimport { useTransition } from \"react-spring\"\r\nimport Cart from \"../components/icons/Cart\"\r\n\r\nfunction addZeroes(num: string) {\r\n  const dec = num.split(\".\")[1]\r\n  const len = dec && dec.length > 2 ? dec.length : 2\r\n  return Number(num).toFixed(len)\r\n}\r\n\r\nfunction getTotalPrices(itemsWithData: any[]) {\r\n  const sub_total = !itemsWithData\r\n    ? 0\r\n    : itemsWithData\r\n        .map((e) => e.quantity * e.price.msrp)\r\n        .reduce((a, b) => a + b, 0)\r\n  const sales_tax = +(sub_total * 0.16).toFixed(2)\r\n  const total = (sales_tax + sub_total).toFixed(2)\r\n  return {\r\n    sub_total,\r\n    sales_tax,\r\n    total,\r\n  }\r\n}\r\n\r\nconst createItemData = (\r\n  items: PIInterface[],\r\n  data: { allMdx: { edges: any[] } }\r\n): CIInterface[] => {\r\n  const final: CIInterface[] = []\r\n  if (items && items.length) {\r\n    items.forEach((item) => {\r\n      const id = item.id\r\n      const size = item.size\r\n      const quantity = item.quantity\r\n      data.allMdx.edges.forEach((catalogItem) => {\r\n        const cfm = catalogItem.node.frontmatter\r\n        if (cfm.id == id) {\r\n          cfm.inventory.forEach((inventoryItem: CIInterface) => {\r\n            if (inventoryItem.size == size)\r\n              final.push({\r\n                id,\r\n                title: cfm.title,\r\n                size: inventoryItem.size,\r\n                quantity,\r\n                price: { msrp: inventoryItem.price.msrp },\r\n                image: cfm.logo.source.childImageSharp,\r\n                weight: inventoryItem.weight,\r\n                accent_color: cfm.accent_color,\r\n              })\r\n          })\r\n        }\r\n      })\r\n    })\r\n  }\r\n  return final\r\n}\r\n\r\nexport default function MyCart({ data }: { data: MDXQuery }) {\r\n  const [items, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\r\n  const [itemsWithData, setItemsWithData] = useState<CIInterface[]>(\r\n    createItemData(items, data)\r\n  )\r\n  const { sub_total, sales_tax, total } = getTotalPrices(itemsWithData)\r\n\r\n  useEffect(() => {\r\n    setItemsWithData(createItemData(items, data))\r\n  }, [items])\r\n\r\n  const removeItem = (id: string, size: string) => {\r\n    setItems((prev) => {\r\n      return prev.filter((e) => e.id + e.size !== id + size)\r\n    })\r\n  }\r\n\r\n  const transitions = useTransition(\r\n    itemsWithData.map((item, i) => {\r\n      return { ...item }\r\n    }),\r\n    (d) => d.id + d.size,\r\n    {\r\n      from: { opacity: 0 },\r\n      enter: {\r\n        opacity: 1,\r\n        height: \"100px\",\r\n        paddingTop: \"15px\",\r\n        paddingBottom: \"15px\",\r\n        marginBottom: \"20px\",\r\n      },\r\n      leave: {\r\n        opacity: 0,\r\n        height: \"0px\",\r\n        paddingTop: \"0px\",\r\n        paddingBottom: \"0px\",\r\n        marginBottom: \"0px\",\r\n        overflow: \"hidden\",\r\n      },\r\n    }\r\n  )\r\n\r\n  return (\r\n    <Page>\r\n      <Helmet\r\n        title=\"Delicious Mushrooms & Tasty Recipes! | TastySpore\"\r\n        description=\"Our Mushrooms grow kits are the best kits available for growing mushrooms indoors. With a 100% guarantee, we know you will love our mushrooms as much as we do.\"\r\n        keywords={[\r\n          \"mushroom\",\r\n          \"mushroom growing kit\",\r\n          \"mushroom drawing\",\r\n          \"mushroom menu\",\r\n          \"lion's mane mushroom\",\r\n          \"shiitake mushroom\",\r\n          \"enoki mushroom\",\r\n          \"reishi mushroom\",\r\n        ]}\r\n      />\r\n      <div className=\"cart-tab\">\r\n        <AniLink paintDrip hex=\"#fff0e4\" to=\"/\" className=\"back-button\">\r\n          <Home color=\"#3e3e3e\" width={35} />\r\n        </AniLink>\r\n        <h3 className=\"cart\">My Cart</h3>\r\n        <section>\r\n          {transitions.map(({ item, props, key }, index) => (\r\n            <CartItem\r\n              item={item}\r\n              styles={props}\r\n              removeItem={removeItem}\r\n              key={key}\r\n            />\r\n          ))}\r\n\r\n          {!items ||\r\n            (!items.length && (\r\n              <div className=\"no-items\">\r\n                <Cart color=\"#dddddd\" width={150} />\r\n                <p>No Items In Cart</p>\r\n              </div>\r\n            ))}\r\n        </section>\r\n        {items && items.length && (\r\n          <div className=\"nav\">\r\n            <p className=\"sub\">\r\n              Sub total: <span>${sub_total}</span>\r\n            </p>\r\n            <p className=\"sub\">\r\n              Tax: <span>${addZeroes(sales_tax + \"\")}</span>\r\n            </p>\r\n            <p className=\"price\">\r\n              Total: <span>${total}</span>\r\n            </p>\r\n            <button\r\n              onClick={() => {\r\n                alert(\r\n                  \"Thank you for your interest! Orders are currently disabled until we officially launch. Check back here soon for updates!\"\r\n                )\r\n              }}\r\n            >\r\n              Continue to shipping\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(sort: { order: DESC, fields: frontmatter___title }) {\r\n      edges {\r\n        node {\r\n          ...ProductFrontmatter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["color","width","xmlns","x","y","viewBox","height","fill","d","CartItem","item","styles","removeItem","useState","confirmDelete","setConfirmDelete","fade","useSpring","opacity","pointerEvents","style","className","tabIndex","onBlur","onClick","id","size","AniLink","paintDrip","hex","accent_color","to","G","image","getImage","alt","title","price","msrp","quantity","weight","Trash","createItemData","items","data","final","length","forEach","allMdx","edges","catalogItem","cfm","node","frontmatter","inventory","inventoryItem","push","logo","source","childImageSharp","MyCart","useLocalStorage","setItems","itemsWithData","setItemsWithData","sub_total","map","e","reduce","a","b","sales_tax","toFixed","total","getTotalPrices","useEffect","num","dec","len","prev","filter","transitions","useTransition","i","from","enter","paddingTop","paddingBottom","marginBottom","leave","overflow","Page","Helmet","description","keywords","Home","index","props","key","Cart","split","Number","alert"],"sourceRoot":""}