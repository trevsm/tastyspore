{"version":3,"file":"component---src-page-templates-product-template-index-tsx-50616640ff0c9f6340f2.js","mappings":"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","sources":["webpack://tastyspore/./src/components/icons/Home.tsx","webpack://tastyspore/./src/page_templates/product_template/components/FullDescription.tsx","webpack://tastyspore/./src/page_templates/product_template/components/Sizes.tsx","webpack://tastyspore/./src/page_templates/product_template/Template.tsx","webpack://tastyspore/./src/page_templates/product_template/components/QuantityPrice.tsx","webpack://tastyspore/./src/page_templates/product_template/index.tsx"],"sourcesContent":["import React from \"react\"\n\nfunction Icon({ color, width }: { color: string; width: number }) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0\"\n      y=\"0\"\n      viewBox=\"0 0 32 32\"\n      width={width}\n      height={width}\n    >\n      <path\n        fill={color}\n        d=\"M23 28h-2a3.003 3.003 0 01-3-3v-2a1.001 1.001 0 00-1-1h-2a1.001 1.001 0 00-1 1v2a3.003 3.003 0 01-3 3H9a3.003 3.003 0 01-3-3v-8.022a2.981 2.981 0 011.158-2.368l8.228-6.4a1.001 1.001 0 011.228 0l8.228 6.4A2.982 2.982 0 0126 16.978V25a3.003 3.003 0 01-3 3zm-8-8h2a3.003 3.003 0 013 3v2a1.001 1.001 0 001 1h2a1.001 1.001 0 001-1v-8.022a.994.994 0 00-.386-.79L16 10.268l-7.614 5.921a.993.993 0 00-.386.789V25a1.001 1.001 0 001 1h2a1.001 1.001 0 001-1v-2a3.003 3.003 0 013-3zm14.608-5.794L17.772 5.143a3.001 3.001 0 00-3.661.01L2.423 14.21a1 1 0 001.225 1.582l11.688-9.057a1.002 1.002 0 011.22-.004l11.836 9.064a1 1 0 001.216-1.588z\"\n      ></path>\n    </svg>\n  )\n}\n\nexport default Icon\n","import React from \"react\"\r\nimport { ProductFrontmatterFragment } from \"../../../../types/gatsby-graphql\"\r\nimport \"./FullDescription.scss\"\r\n\r\nexport function FullDescription({\r\n  data,\r\n}: {\r\n  data: ProductFrontmatterFragment\r\n}) {\r\n  const fm = data?.frontmatter\r\n\r\n  if (!fm) return null\r\n  return (\r\n    <div className=\"full-description\">\r\n      <h2>Profile </h2>\r\n      <div className=\"profile\">\r\n        <div className=\"flavor\">\r\n          <h3>Flavor: </h3>\r\n          <ul>\r\n            {fm.profile.flavor.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"texture\">\r\n          <h3>Texture: </h3>\r\n          <ul>\r\n            {fm.profile.texture.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"aroma\">\r\n          <h3>Aroma: </h3>\r\n          <ul>\r\n            {fm.profile.aroma.map((e: string, key: number) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <div className=\"similar\" style={{ minWidth: \"200px\" }}>\r\n          <h3>Similar flavor to: </h3>\r\n          <ul>\r\n            {fm.profile.similar.map((e, key) => (\r\n              <li key={key}>{e}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"aliases\">\r\n        <h2>Common Names</h2>\r\n        <ul>\r\n          {fm.aka.map((e, key) => (\r\n            <li key={key}>{e}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"description\">\r\n        <h2>Description</h2>\r\n        <p>\r\n          {fm.description} They prefer {fm.grow.temp.readable} temperatures of\r\n          around {fm.grow.temp.degrees.min}°F ~{fm.grow.temp.degrees.max}°F at a\r\n          humidity of {fm.grow.humidity}% and take approximatly {fm.grow.time}{\" \"}\r\n          to mature to the size of around {fm.grow.size}in.\r\n        </p>\r\n      </div>\r\n      <div className=\"benefits\">\r\n        <h2>Benefits</h2>\r\n        <ul>\r\n          {fm.benefits.map((e, key) => (\r\n            <li key={key}>{e}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"nutrition\">\r\n        <h2>Nutrition Values</h2>\r\n        <i>In 1 cup:</i>\r\n        <ul>\r\n          <li>calories: {fm.nutrition.calories}</li>\r\n          <li>carbs: {fm.nutrition.carbs}</li>\r\n          <li>protein: {fm.nutrition.protein}</li>\r\n          <li>fat: {fm.nutrition.fat}</li>\r\n          <li>fiber: {fm.nutrition.fiber}</li>\r\n        </ul>\r\n        <hr />\r\n        <h3>Vitamins</h3>\r\n        <ul className=\"vitamins\">\r\n          {fm.nutrition.vitamins.map((e, key) => (\r\n            <li key={key}>\r\n              {e.name}: {e.value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function Sizes({\r\n  inventory,\r\n  size,\r\n  setSize,\r\n}: {\r\n  inventory: any\r\n  size: string\r\n  setSize: React.Dispatch<React.SetStateAction<string>>\r\n}) {\r\n  if (!inventory || !size || !setSize) return null\r\n  return (\r\n    <div className=\"sizes\">\r\n      {inventory &&\r\n        inventory.map((item: any, idx: number) => (\r\n          <div\r\n            key={idx}\r\n            className={\r\n              item?.size +\r\n              (item?.size == size ? \" selected\" : \"\") +\r\n              (item.quantity == 0 ? \" out-of-stock\" : \"\")\r\n            }\r\n            onClick={() => {\r\n              setSize(item?.size as string)\r\n            }}\r\n          >\r\n            <p className=\"size-label\">{item?.size}</p>\r\n            {item?.weight}\r\n            <span className=\"unit\">lbs</span>\r\n            {item.quantity == 0 ? (\r\n              <p className=\"out-label\">out of stock</p>\r\n            ) : (\r\n              <p className=\"price price-label\">\r\n                <span>$</span>\r\n                {item.price.msrp}\r\n              </p>\r\n            )}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { ProductFrontmatterFragment } from \"../../../types/gatsby-graphql\"\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\r\n\r\nimport Home from \"../../components/icons/Home\"\r\nimport { FullDescription } from \"./components/FullDescription\"\r\nimport { Sizes } from \"./components/Sizes\"\r\nimport { QuantityPrice } from \"./components/QuantityPrice\"\r\n\r\nimport \"./Template.scss\"\r\nimport { navigate } from \"gatsby\"\r\nimport Helmet from \"../../components/Main/Helmet/Helmet\"\r\nimport { PIInterface } from \"../../../types\"\r\nimport { useLocalStorage } from \"usehooks-ts\"\r\nimport AniLink from \"gatsby-plugin-transition-link/AniLink\"\r\n\r\nexport function Template({ d }: { d: any }) {\r\n  const data: ProductFrontmatterFragment = d?.mdx\r\n  const fm = data.frontmatter\r\n\r\n  // selected item specs\r\n  const defaultSize = \"medium\"\r\n  const [size, setSize] = useState(defaultSize)\r\n  const [quantity, setQuantity] = useState(1)\r\n\r\n  // items in cart\r\n  const [_, setItems] = useLocalStorage<PIInterface[]>(\"my_cart\", null)\r\n\r\n  const selectedItem = fm?.inventory.filter(\r\n    (item: any) => item?.size == size\r\n  )[0]\r\n  const maxQuantity = selectedItem.quantity\r\n\r\n  const accentColor = fm?.accent_color as string\r\n  const mdxStyle = { \"--accentColor\": accentColor } as React.CSSProperties\r\n\r\n  if (!fm?.logo || !fm?.logo.source) return null\r\n  const image = getImage(fm?.logo?.source.childImageSharp?.gatsbyImageData)\r\n\r\n  const price = selectedItem?.price?.sale\r\n    ? selectedItem.price.sale * quantity\r\n    : selectedItem?.price?.msrp * quantity\r\n\r\n  const setCartItems = (id: string, size: string, quantity: number) => {\r\n    setItems((prev) => {\r\n      console.log(prev)\r\n\r\n      if (prev == undefined) {\r\n        return [{ id, size, quantity }]\r\n      }\r\n\r\n      let prevQuantity = 0\r\n      return prev\r\n        .filter((e) => {\r\n          if (e.id + e.size !== id + size) {\r\n            return true\r\n          } else {\r\n            prevQuantity = e.quantity\r\n          }\r\n        })\r\n        .concat({\r\n          id,\r\n          size,\r\n          quantity:\r\n            quantity + prevQuantity <= maxQuantity\r\n              ? quantity + prevQuantity\r\n              : maxQuantity,\r\n        })\r\n    })\r\n    setQuantity(1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (quantity > selectedItem.quantity) {\r\n      setQuantity(selectedItem.quantity)\r\n    }\r\n  }, [size])\r\n\r\n  return (\r\n    <div className=\"product-page\" style={mdxStyle}>\r\n      <Helmet\r\n        title={fm.readable_class + \" \" + fm.readable_category + \" | TastySpore\"}\r\n        description={fm.description}\r\n        keywords={[\r\n          \"mushroom\",\r\n          \"mushroom growing kit\",\r\n          \"how to grow mushrooms\",\r\n          fm.scientific_name,\r\n          ...fm.aka,\r\n          ...fm.benefits,\r\n        ]}\r\n      />\r\n      <AniLink paintDrip hex=\"#fff0e4\" className=\"close\" to=\"/\">\r\n        <Home color=\"#3e3e3e\" width={40} />\r\n      </AniLink>\r\n      <div className=\"content\">\r\n        <div className=\"image\">\r\n          {image && <GatsbyImage image={image} alt={fm?.title as string} />}\r\n        </div>\r\n        <h3>{fm?.readable_category}</h3>\r\n        <h2 style={{ color: accentColor }}>\r\n          {fm?.readable_class} <span>({fm?.scientific_name})</span>\r\n        </h2>\r\n        <p className=\"select-size-label\">(select a size)</p>\r\n        <Sizes inventory={fm.inventory} size={size} setSize={setSize} />\r\n        <hr />\r\n        <FullDescription data={data} />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <p className=\"price\" style={{ color: accentColor }}>\r\n          <span>$</span>\r\n          {price}\r\n        </p>\r\n        {QuantityPrice(setQuantity, maxQuantity, quantity)}\r\n        <button\r\n          className={\r\n            \"buy\" + (selectedItem.quantity == 0 ? \" out-of-stock\" : \"\")\r\n          }\r\n          style={{ backgroundColor: accentColor }}\r\n          onClick={() => {\r\n            setCartItems(fm.id, size, quantity)\r\n          }}\r\n        >\r\n          {selectedItem.quantity == 0 ? <span>No Stock</span> : <span>+</span>}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function QuantityPrice(\r\n  setQuantity: React.Dispatch<React.SetStateAction<number>>,\r\n  maxQuantity: number,\r\n  quantity: number\r\n) {\r\n  return (\r\n    <div className=\"quantity-and-price\">\r\n      <div className=\"quantity\">\r\n        <button\r\n          className=\"add\"\r\n          onClick={() => {\r\n            setQuantity((prev) => (prev < maxQuantity ? prev + 1 : maxQuantity))\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <span className=\"num\">{quantity}</span>\r\n        <button\r\n          className=\"minus\"\r\n          onClick={() => {\r\n            setQuantity((prev) => (prev > 1 ? prev - 1 : 1))\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport { Page } from \"../../components/Main/Page/Page\"\r\nimport { Template } from \"./Template\"\r\nimport CartIcon from \"../../components/MyCart/CartIcon\"\r\n\r\nexport default function Main({ data }: { data: any }) {\r\n  return (\r\n    <Page>\r\n      <CartIcon d={data} />\r\n      <Template d={data} />\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query ($id: String!) {\r\n    mdx(frontmatter: { id: { eq: $id } }) {\r\n      ...ProductFrontmatter\r\n    }\r\n  }\r\n`\r\n"],"names":["color","width","xmlns","x","y","viewBox","height","fill","d","FullDescription","data","fm","frontmatter","className","profile","flavor","map","e","key","texture","aroma","style","minWidth","similar","aka","description","grow","temp","readable","degrees","min","max","humidity","time","size","benefits","nutrition","calories","carbs","protein","fat","fiber","vitamins","name","value","Sizes","inventory","setSize","item","idx","quantity","onClick","weight","price","msrp","Template","mdx","useState","setQuantity","useLocalStorage","setItems","selectedItem","filter","maxQuantity","accentColor","accent_color","mdxStyle","logo","source","image","getImage","childImageSharp","gatsbyImageData","sale","useEffect","Helmet","title","readable_class","readable_category","keywords","scientific_name","AniLink","paintDrip","hex","to","Home","G","alt","prev","QuantityPrice","backgroundColor","id","console","log","undefined","prevQuantity","concat","setCartItems","Main","Page","CartIcon"],"sourceRoot":""}